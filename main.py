# ----- –∏—Å–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π ---
import datetime
import time
# ----- —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –≤—ã–≤–æ–¥–∞ ----
chapters = ['- –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä - 1', '- –°–µ–∫—É–Ω–¥–æ–º–µ—Ä - 2']
type_operations = ['- –ë–∞–∑–æ–≤—ã–µ - 1', '- –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ - 2']
main_operations = ['- –°–ª–æ–∂–µ–Ω–∏–µ - 1', '- –í—ã—á–∏—Ç–∞–Ω–∏–µ - 2', '- –£–º–Ω–æ–∂–µ–Ω–∏–µ - 3', '- –î–µ–ª–µ–Ω–∏–µ - 4', '- –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ—Å—Ç–∞—Ç–∫–∞ - 5', '- –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å - 6']
advanced_operations = ['–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:',
          '- –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –º–∞—Å—Å - 1', '- –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –º–µ—Ä - 2',
          '- –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∞ - 3', '- –ü–µ—Ä–µ–≤–æ–¥ —á–∏—Å–ª–∞ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —Å—á–∏—Å–ª–µ–Ω–∏—è –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é - 4']
masses = ['- –ö–∏–ª–æ–≥—Ä–∞–º–º—ã - 1', '- –ì—Ä–∞–º–º—ã - 2', '- –¢–æ–Ω–Ω—ã - 3', '- –¶–µ–Ω—Ç–Ω–µ—Ä—ã - 4',
              '- –ö–∏–ª–æ—Ç–æ–Ω–Ω—ã - 5', '- –ú–∏–ª–ª–∏–≥—Ä–∞–º–º—ã - 6']
measures = ['- –ú–µ—Ç—Ä—ã - 1', '- –ö–∏–ª–æ–º–µ—Ç—Ä—ã - 2', '- –ú–∏–ª–ª–∏–º–µ—Ç—Ä—ã - 3', '- –°–∞–Ω—Ç–∏–º–µ—Ç—Ä—ã - 4']
# ----- –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–æ—Å—å–±–∞ –µ–≥–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. 
time.sleep(0.5) # -------- –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –º–µ—Ç–æ–¥ sleep –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –≤—ã–≤–æ–¥–∞ -------------------------------------
print('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä 2.0 ! ‚ú®')
time.sleep(0.5)
print('–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –æ–ø–µ—Ä–∞—Ü–∏–π —É–∫–∞–∑—ã–≤–∞–π—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–æ–º–µ—Ä –æ–ø–µ—Ä–∞—Ü–∏–∏ ‚ùó')
time.sleep(0.5)
print('–í—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –Ω–∞—á–∞–ª—É —á—Ç–æ –±—ã –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å —Ä–∞–∑–¥–µ–ª, —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ ‚ùó')
time.sleep(0.5)
print('–î–ª—è —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–≤–µ—Å—Ç–∏ —Å–ª–æ–≤–æ "–Ω–∞–∑–∞–¥" –ø—Ä–∏ –≤–≤–æ–¥–µ –≤ –æ–ø–µ—Ä–∞—Ü–∏–∏. –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–≤–µ–¥–∏—Ç–µ "—Å—Ç–æ–ø" ! ')
time.sleep(1)
# ---------------------------------------------------------------------------------------------------------------------------

# --------- —Å—Ç–∞—Ä—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã -------------
def start(): # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ñ—É–Ω–∫—Ü–∏–∏ —á—Ç–æ –±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º —á–∞—Å—Ç—è–º –∫–æ–¥–∞ -- 
    print('–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç ?')
    for i in chapters:
        time.sleep(0.9) # –∏–∑ –º–æ–¥—É–ª—è time –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª –º–µ—Ç–æ–¥ sleep –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞ ---
        print(i)
    try: # –¥–æ–±–∞–≤–∏–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ –∫–æ–¥–µ, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –µ—Å—Ç—å - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤–µ—Ä–Ω–µ—Ç –≤ –Ω–∞—á–∞–ª–æ ---
        charter = int(input('> '))
    except ValueError:
        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
        time.sleep(2)
        start()
    chapteronetwo(charter) # –≤—ã–∑—ã–≤–∞—é —Ñ—É–Ω–∫—Ü–∏—é chapteronetwo –∏ –ø–µ—Ä–µ–¥–∞—é —Ç—É–¥–∞ –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π  -- 


def chapteronetwo(charter): # –æ—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è 
    import time
    if charter == 1:
        print('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π !')
        for i in type_operations:
            time.sleep(0.9)
            print(i)
        try:
            operation = int(input('> '))
        except ValueError:
            print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
            time.sleep(2)
            start()
        if operation == 1:
            print(' –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –±–∞–∑–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö ! –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö üìÑ')
            for i in main_operations:
                time.sleep(0.4)
                print(i)
            try:
                choice_operation = int(input('> '))
            except ValueError:
                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                time.sleep(2)
                start()

        
            if choice_operation == 1:
                while True:
                    try:
                        num_1 = input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ')
                        if num_1 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_1 == '—Å—Ç–æ–ø':
                            break
                        num_2 = input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ')
                        if num_2 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_2 == '—Å—Ç–æ–ø':
                            break
                        print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) + int(num_2)) # —Å–ª–æ–∂–µ–Ω–∏–µ
                    except ValueError:
                                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                                time.sleep(2)
                                start()
                                break 

        

            if choice_operation == 2:
                while True:
                    try:
                        num_1 = input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ')
                        if num_1 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_1 == '—Å—Ç–æ–ø':
                            break
                        num_2 = input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ')
                        if num_2 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_2 == '—Å—Ç–æ–ø':
                            break
                        print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) - int(num_2)) # –≤—ã—á–∏—Ç–∞–Ω–∏–µ
                    except ValueError:
                                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                                time.sleep(2)
                                start()
                                break 



            if choice_operation == 3:
                    while True:
                            try:
                                num_1 = input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ')
                                if num_1 == '–Ω–∞–∑–∞–¥':
                                    start()
                                    break
                                if num_1 == '—Å—Ç–æ–ø':
                                    break
                                num_2 = input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ')
                                if num_2 == '–Ω–∞–∑–∞–¥':
                                    start()
                                    break
                                if num_2 == '—Å—Ç–æ–ø':
                                    break                            
                                print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) * int(num_2)) # —É–º–Ω–æ–∂–µ–Ω–∏–µ
                            except ValueError:
                                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                                time.sleep(2)
                                start()
                                break 

        
            if choice_operation == 4:
                    while True:
                        num_1 = input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ')
                        if num_1 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_1 == '—Å—Ç–æ–ø':
                            break
                        num_2 = input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ')
                        if num_2 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_2 == '—Å—Ç–æ–ø':
                            break
                        print('- –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ - 1', '- –° –æ—Å—Ç–∞—Ç–∫–æ–º - 2', sep='\n')
                        choice_subtype = int(input('> '))
                        try:
                            if choice_subtype == 1:
                                print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) // int(num_2))  # –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –¥–µ–ª–µ–Ω–∏–µ.
                            else:
                                print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) / int(num_2)) # –î–µ–ª–µ–Ω–∏–µ —Å –æ—Å—Ç–∞—Ç–∫–æ–º 
                        except ZeroDivisionError:
                            print('–û—à–∏–±–∫–∞ ‚ùó –î–µ–ª–µ–Ω–∏–µ –Ω–∞ 0 –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ..')
                            time.sleep(1)
                            start()
                        except ValueError:
                            print('–û—à–∏–±–∫–∞ ‚ùó –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≥–¥–µ –Ω–∞–¥–æ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä—ã, –≤—ã –≤–≤–µ–ª–∏—Ç–µ –±—É–∫–≤—ã. –í –Ω–∞—á–∞–ª–æ...')
                            time.sleep(1.5)
                            start()

            if choice_operation == 5:
                while True:
                    try:
                        num_1 = input('–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: ')
                        if num_1 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_1 == '—Å—Ç–æ–ø':
                            break
                        num_2 = input('–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: ')
                        if num_2 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_2 == '—Å—Ç–æ–ø':
                            break
                        if int(num_1) % int(num_2) == 0:
                            print('–û—Å—Ç–∞—Ç–∫–∞ –Ω–µ—Ç!')
                        else:
                            print('–†–µ–∑—É–ª—å—Ç–∞—Ç = ', int(num_1) % int(num_2)) # –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è
                    except ValueError:
                                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                                time.sleep(2)
                                start()
                                break 


                
            if choice_operation == 6:
                while True:
                    try:
                        num_1 = input('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ')
                        if num_1 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_1 == '—Å—Ç–æ–ø':
                            break
                        num_2 = input('–í–≤–µ–¥–∏—Ç–µ —Å—Ç–µ–ø–µ–Ω—å: ')
                        if num_2 == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if num_2 == '—Å—Ç–æ–ø':
                            break
                        print(f'–ß–∏—Å–ª–æ {num_1} –≤ —Å—Ç–µ–ø–µ–Ω–∏ {num_2} = {int(num_1) ** int(num_2)}') # –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
                    except ValueError:
                                print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                                time.sleep(2)
                                start()
                                break 



        if operation == 2:
            print('–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö ! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö üìÑ')
            for i in advanced_operations:
                time.sleep(0.4)
                print(i)
            choice_operation = int(input('> '))

            if choice_operation == 1:
                while True:
                    try:
                        time.sleep(0.7)
                        print('–ò–∑ –∫–∞–∫–æ–π –º–∞—Å—Å—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º?')
                        for i in masses:
                            time.sleep(0.4)
                            print(i)
                        initial_mer = input('> ')

                        if initial_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if initial_mer == '—Å—Ç–æ–ø':
                            break 

                        print('–í –∫–∞–∫—É—é –º–∞—Å—Å—É –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º?')
                        for i in masses:
                            time.sleep(0.4)
                            print(i)
                        final_mer = input('> ')


                        if final_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if final_mer == '—Å—Ç–æ–ø':
                            break  

                        x_mer = input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å—ã: ')

                        if x_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if x_mer == '—Å—Ç–æ–ø':
                            break  
                        # --------------------------------------------------------------------------------------
                        # –ì–†–ê–ú–ú–´ ------------------------------------------------------------------------------
                        if initial_mer == '2' and final_mer == '1':
                            print(int(int(x_mer)) / 1000, end='–∫–≥\n')
                        elif initial_mer == '2' and initial_mer == '4':
                            print(int(int(x_mer)) / 100000, end='—Ü–Ω\n')
                        elif initial_mer == '2' and initial_mer == '3':
                            print(int(int(x_mer)) / 1000000, end='—Ç–æ–Ω–Ω\n')
                        elif initial_mer == '2' and initial_mer == '5':
                            print(int(int(x_mer)) / 1000000000, end='–∫—Ç\n')
                        elif initial_mer == '2' and initial_mer == '6':
                            print(int(int(x_mer)) * 1000, end='–º–≥\n')
                        # –ö–ò–õ–û–ì–†–ê–ú–ú–´ ------------------------------------------------------------------------
                        elif initial_mer == '1' and final_mer == '2':
                            print(int(int(x_mer)) * 1000, end='–≥—Ä\n')
                        elif initial_mer == '1' and initial_mer == '3':
                            print(int(int(x_mer)) / 1000, end='—Ç–æ–Ω–Ω\n')
                        elif initial_mer == '1' and initial_mer == '5':
                            print(int(int(x_mer)) / 1000000, end='–∫—Ç\n')
                        elif initial_mer == '1' and initial_mer == '6':
                            print(int(int(x_mer)) * 1000000, end='–º–≥\n')
                        elif initial_mer == '1' and initial_mer == '4':
                            print(int(int(x_mer)) * 100, end='—Ü—Ç\n')
                        # –¢–û–ù–ù–´ ------------------------------------------------------------------------------
                        elif initial_mer == '3' and final_mer == '2':
                            print(int(int(x_mer)) * 1000000, end='–≥—Ä\n')
                        elif initial_mer == '3' and final_mer == '1':
                            print(int(int(x_mer)) * 1000, end='–∫–≥\n')
                        elif initial_mer == '3' and initial_mer == '5':
                            print(int(int(x_mer)) * 0.001, end='–∫—Ç\n')
                        elif initial_mer == '3' and initial_mer == '6':
                            print(int(int(x_mer)) * 1000000000, end='–º–≥\n')
                        elif initial_mer == '3' and initial_mer == '4':
                            print(int(int(x_mer)) * 10, end='—Ü—Ç\n')
                        # –¶–ï–ù–¢–ù–ï–†–´ --------------------------------------------------------------------------------
                        elif initial_mer == '4' and final_mer == '2':
                            print(int(int(x_mer)) * 1000000, end='–≥—Ä\n')
                        elif initial_mer == '4' and final_mer == '1':
                            print(int(int(x_mer)) * 100, end='–∫–≥\n')
                        elif initial_mer == '4' and initial_mer == '5':
                            print(int(int(x_mer)) * 0.0001, end='–∫—Ç\n')
                        elif initial_mer == '4' and initial_mer == '6':
                            print(int(int(x_mer)) * 100000000, end='–º–≥\n')
                        elif initial_mer == '4' and initial_mer == '3':
                            print(int(int(x_mer)) * 0.01, end='—Ç–æ–Ω–Ω\n')
                        # –ö–ò–õ–û–¢–û–ù–ù–´ ------------------------------------------------------------------------------
                        elif initial_mer == '5' and final_mer == '2':
                            print(int(int(x_mer)) * 1000000000, end='–≥—Ä\n')
                        elif initial_mer == '5' and final_mer == '1':
                            print(int(int(x_mer)) * 1000000, end='–∫–≥\n')
                        elif initial_mer == '5' and initial_mer == '4':
                            print(int(int(x_mer)) * 10000, end='—Ü–Ω\n')
                        elif initial_mer == '5' and initial_mer == '6':
                            print(int(int(x_mer)) * 1000000000000, end='–º–≥\n')
                        elif initial_mer == '5' and initial_mer == '3':
                            print(int(int(x_mer)) * 1000, end='—Ç–æ–Ω–Ω\n')
                        # –ú–ò–õ–õ–ò–ì–†–ê–ú–ú–´ -----------------------------------------------------------------------------
                        elif initial_mer == '6' and final_mer == '2':
                            print(int(int(x_mer)) * 0.001, end='–≥—Ä\n')
                        elif initial_mer == '6' and final_mer == '1':
                            print(int(int(x_mer)) * 0.000001, end='–∫–≥\n')
                        elif initial_mer == '6' and initial_mer == '4':
                            print(int(int(x_mer)) * 0.00000001, end='—Ü–Ω\n')
                        elif initial_mer == '6' and initial_mer == '5':
                            print(int(int(x_mer)) * 0.000000000001, end='–∫—Ç\n')
                        elif initial_mer == '6' and initial_mer == '3':
                            print(int(int(x_mer)) * 0.000000001, end='—Ç–æ–Ω–Ω\n')
                    except ValueError:
                        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break 

            
            if choice_operation == 2:
                while True:
                    try:
                        time.sleep(0.7)
                        print('–ò–∑ –∫–∞–∫–æ–π –º–µ—Ä—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º?')
                        for i in measures:
                            time.sleep(0.4)
                            print(i)
                        initial_mer = input('> ')
                        if initial_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if initial_mer == '—Å—Ç–æ–ø':
                            break 
                        print('–í –∫–∞–∫—É—é –º–µ—Ä—É –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º?')
                        for i in measures:
                            time.sleep(0.4)
                            print(i)
                        final_mer = input('> ')
                        if final_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if final_mer == '—Å—Ç–æ–ø':
                            break  
                        x_mer = input('–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–π –º–µ—Ä—ã: ')
                        if x_mer == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if x_mer == '—Å—Ç–æ–ø':
                            break 
                        # –ú–ï–¢–†–´ | –ù–∏–∂–µ –ø–µ—Ä–µ–≤–æ–¥ –∏–∑ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π –º–µ—Ä—ã –≤ –∑–Ω–∞—á–µ–Ω–∏–µ –¥—Ä—É–≥–æ–π –º–µ—Ä—ã. ---------
                        if initial_mer == '1' and final_mer == '2':
                            print(int(x_mer) / 1000, end='–∫–º\n')
                        elif initial_mer == '1' and final_mer == '3':
                            print(int(x_mer) * 1000, end='–º–ª\n')
                        elif initial_mer == '1' and final_mer == '4':
                            print(int(x_mer) * 100, end='—Å–º\n')
                        # –°–ê–ù–¢–ò–ú–ï–¢–†–´ ------------------------------------------------------------------
                        if initial_mer == '4' and final_mer == '2':
                            print(int(x_mer) * 0.00001, end='–∫–º\n')
                        elif initial_mer == '4' and final_mer == '3':
                            print(int(x_mer) * 10, end='–º–ª\n')
                        elif initial_mer == '4' and final_mer == '1':
                            print(int(x_mer) * 0.01, end='–º\n')
                        # –ú–ò–õ–õ–ò–ú–ï–¢–†–´ ----------------------------------------------------------------------
                        if initial_mer == '3' and final_mer == '2':
                            print(int(x_mer) * 0.000001, end='–∫–º\n')
                        elif initial_mer == '3' and final_mer == '4':
                            print(int(x_mer) * 0.1, end='—Å–º\n')
                        elif initial_mer == '3' and final_mer == '1':
                            print(int(x_mer) * 0.001, end='–º\n')
                        # –ö–ò–õ–û–ú–ï–¢–†–´ ------------------------------------------------------------------------------
                        if initial_mer == '2' and final_mer == '3':
                            print(int(x_mer) * 1000000, end='–º–ª\n')
                        elif initial_mer == '2' and final_mer == '4':
                            print(int(x_mer) * 1000, end='—Å–º\n')
                        elif initial_mer == '2' and final_mer == '1':
                            print(int(x_mer) * 100, end='–º\n') 
                    except ValueError:
                        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break 


            if choice_operation == 3:
                while True:
                    try:
                        principal = input("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤–∫–ª–∞–¥–∞: ")
                        if principal == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if principal == '—Å—Ç–æ–ø':
                            break
                        rate = input("–í–≤–µ–¥–∏—Ç–µ –≥–æ–¥–æ–≤—É—é –ø—Ä–æ—Ü–µ–Ω—Ç–Ω—É—é —Å—Ç–∞–≤–∫—É (%): ")
                        if rate == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if rate == '—Å—Ç–æ–ø':
                            break
                        time = input("–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –≤–∫–ª–∞–¥–∞ (–≤ –≥–æ–¥–∞—Ö): ")
                        if time == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if time == '—Å—Ç–æ–ø':
                            break

                        # –†–∞—Å—á–µ—Ç –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –≤–∫–ª–∞–¥–∞
                        interest = (int(principal) * int(rate) * int(time)) // 100

                        # –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —Å—É–º–º—ã —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏
                        total_amount = int(principal) + int(interest)

                        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                        print("–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –≤–∫–ª–∞–¥–∞:", interest)
                        print("–û–±—â–∞—è —Å—É–º–º–∞ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–∞–º–∏:", total_amount)
                    except ValueError:
                        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break 
                    except AttributeError:
                        print('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö ‚ö†Ô∏è –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break


            if choice_operation == 4:
                while True:
                    try:
                        number = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ")
                        if number == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if number == '—Å—Ç–æ–ø':
                            break  # –≤–≤–æ–¥–∏–º —á–∏—Å–ª–æ
                        base = input("–í–≤–µ–¥–∏—Ç–µ —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è —á–∏—Å–ª–∞: ")
                        if base == '–Ω–∞–∑–∞–¥':
                            start()
                            break
                        if base == '—Å—Ç–æ–ø':
                            break 
                        if base <= 1:  
                            print('–°–∏—Å—Ç–µ–º–∞ —Å—á–∏—Å–ª–µ–Ω–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ—Ç 2-—É—Ö –∏ –¥–æ 36!')
                        else:
                            
                            decimal_number = int(number, int(base))  
                            
                            print("–ß–∏—Å–ª–æ –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ —Å—á–∏—Å–ª–µ–Ω–∏—è:", decimal_number)
                    except ValueError:
                        print('–û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ ‚ùó –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break 
                    except TypeError:
                        print('–û—à–∏–±–∫–∞ —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö üôÖ‚Äç‚ôÇÔ∏è –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ...')
                        time.sleep(2)
                        start()
                        break
    if charter == 2:
        import stopwatch
        stopwatch.greet()

start()
 
# –≤–µ—Å—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä --------------------------------------------------------------------------------------------
